# default login
user: pi
pass: raspberry


# configure WiFi on RasPi Zero W:
cat <<EOF > /etc/NetworkManager/system-connections/foobar.nmconnection
[connection]
id=my favorite network
uuid=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
type=wifi
interface-name=wlan0

[wifi]
mode=infrastructure
ssid=network_name

[wifi-security]
auth-alg=open
key-mgmt=wpa-psk
psk=topsi_kret_pa$$w0rd

[ipv4]
method=auto

[ipv6]
addr-gen-mode=default
method=auto

[proxy]
EOF


# switch UART between: linux console, serial port and none
# raspi-config
> interface options > serial port > (pick preferred combination)


# enable SSH by default (headless)
touch /boot/ssh


# prohibit passwords via SSH (keys only)
cat <<EOF > /etc/ssh/sshd_config.d/no_passwords.conf
PermitRootLogin prohibit-password
PasswordAuthentication no
PermitEmptyPasswords no
KerberosOrLocalPasswd no
EOF
systemctl restart ssh


# add IP of eth0 to TTY loggin screen
echo '\4{eth0}' >> /etc/issue


# I2C usage
(enable I2C in `raspi-config` first!)

## scan bus for devices
i2cdetect -y 1

## read entire from EEPROM
i2cdump -y 1 0x50

## read byte 0x42 from EEPROM (0x50 address)
i2cget -y 1 0x50 0x42

## set byte 0x42 to 0x12 (EEPRIN is at 0x50 address)
i2cset -y 1 0x50 0x42 0x12


# ensure HDMI comes up even if monitor was not plugged in on boot
# to /boot/firmware/config.txt add these lines and reboot:

# allow to connect monitor at runtime
hdmi_force_hotplug=1
# compatibility mode
hdmi_safe=1
# 1080p @ 60Hz
hdmi_group=1
hdmi_mode=16
# force treating HDMI as DVI (this makes all the difference, apparently)
hdmi_drive=2


# show CPU temperature
vcgencmd measure_temp


# check which HW version is used:
cat /proc/device-tree/model
# (note: RasPi >= 3 is 64-bit)
# e.g.:
# Raspberry Pi Model B Rev 2
# Raspberry Pi 2 Model B Rev 1.1
# Raspberry Pi 4 Model B Rev 1.4
# Raspberry Pi Zero W Rev 1.1

#
# RasPi CSI camera
#

# record video (1k)
rpicam-vid --mode 1920:1080:8:U -o x.mkv

# capture image into a file
rpicam-jpeg -o x.jpg

# streaming camera video
rpicam-vid -t 0 -n --inline --listen  -o tcp://0.0.0.0:1234

# receiving stream
ffplay tcp://my-camera-address:1234 -fflags nobuffer -flags low_delay -framedrop
